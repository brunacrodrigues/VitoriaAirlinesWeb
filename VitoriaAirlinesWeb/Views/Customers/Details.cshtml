@model VitoriaAirlinesWeb.Models.ViewModels.Customers.CustomerDetailsViewModel
@using VitoriaAirlinesWeb.Data.Enums

@{
    ViewData["Title"] = "Customer Details";
}

<div class="container-fluid py-4" style="background-color: #0e0e0e;">
    <div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="dark-title mb-0">Customer: @Model.Customer.User.FullName</h2>
    <a asp-action="Index" class="btn btn-brand-primary">
        <i class="fas fa-arrow-left me-1"></i> Back to List
    </a>
</div>


    <div class="row g-4">
        <div class="col-12">
            <div class="card flight-card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-user me-2"></i> Customer Information
                    </div>
                     <div class="d-flex gap-2">
                        @if (Model.Role != "Deactivated")
                        {
                            <a asp-action="EditCustomerProfile" asp-route-id="@Model.Customer.Id" class="btn btn-sm btn-gold">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <button class="btn btn-sm btn-brand-primary" style="background-color:darkred" title="Deactivate"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal"
                                    data-id="@Model.Customer.Id"
                                    data-model="@Model.Customer.User.FullName">
                                <i class="fas fa-trash-alt"></i>Deactivate
                            </button>
                        }
                        else
                        {
                            <span class="text-muted"><i class="fas fa-lock me-1"></i>Deactivated Account</span>
                        }
                    </div>
                </div>

                <div class="card-body">
                    <div class="row text-center align-items-center">
                        <div class="col-md-6 text-start">
                            <p><strong>Full Name:</strong> @Model.Customer.User.FullName</p>
                            <p><strong>Email:</strong> @Model.Customer.User.Email</p>
                            <p><strong>Total Flights:</strong> @Model.TotalFlights</p>
                            <p><strong>Passport Number:</strong> @(Model.Customer.PassportNumber ?? "—")</p>
                            <p>
                                <strong>Nationality:</strong>
                                @if (Model.Customer.Country != null)
                                {
                                    <img src="@Model.Customer.Country.FlagImageUrl"
                                         alt="@Model.Customer.Country.CountryCode"
                                         width="32"
                                         class="me-2 align-middle rounded shadow-sm" />
                                    <span class="align-middle">@Model.Customer.Country.Name</span>
                                }
                                else
                                {
                                    <span>—</span>
                                }
                            </p>
                        </div>

                        <div class="col-md-6 text-start"></div>
                    </div>
                </div>
            </div>
        </div>

      <div class="col-md-6">
    <div class="card flight-card h-100">
        <div class="card-header">
            <i class="fas fa-history me-2"></i> Last Flight
        </div>
        <div class="card-body">
            @if (Model.LastFlight != null)
            {
                <p><strong>Flight Number:</strong> @Model.LastFlight.FlightNumber</p>

                <p>
                    <strong>From:</strong>
                    @if (Model.LastFlight.OriginAirport?.Country?.FlagImageUrl != null)
                    {
                        <img src="@Model.LastFlight.OriginAirport.Country.FlagImageUrl"
                             alt="@Model.LastFlight.OriginAirport.Country.CountryCode"
                             width="25" class="me-2 align-middle" />
                    }
                    @Model.LastFlight.OriginAirport?.FullName
                    (@Model.LastFlight.OriginAirport?.Country?.Name)
                </p>

                <p>
                    <strong>To:</strong>
                    @if (Model.LastFlight.DestinationAirport?.Country?.FlagImageUrl != null)
                    {
                        <img src="@Model.LastFlight.DestinationAirport.Country.FlagImageUrl"
                             alt="@Model.LastFlight.DestinationAirport.Country.CountryCode"
                             width="25" class="me-2 align-middle" />
                    }
                    @Model.LastFlight.DestinationAirport?.FullName
                    (@Model.LastFlight.DestinationAirport?.Country?.Name)
                </p>

                <p><strong>Departure:</strong> @Model.LastFlight.DepartureUtc.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</p>

                <p><strong>Status:</strong>
                    @switch (Model.LastFlight.Status)
                    {
                        case FlightStatus.Scheduled:
                            <span class="badge bg-warning text-dark">Scheduled</span>
                            break;
                        case FlightStatus.Departed:
                            <span class="badge bg-primary">Departed</span>
                            break;
                        case FlightStatus.Completed:
                            <span class="badge bg-success">Completed</span>
                            break;
                        case FlightStatus.Canceled:
                            <span class="badge bg-danger">Canceled</span>
                            break;
                    }
                </p>
            }
            else
            {
                <p class="text-light">No past flights found.</p>
            }
        </div>
    </div>
</div>

<div class="col-md-6">
    <div class="card flight-card h-100">
        <div class="card-header">
            <i class="fas fa-plane-departure me-2"></i> Next Flight
        </div>
        <div class="card-body">
            @if (Model.NextFlight != null)
            {
                <p><strong>Flight Number:</strong> @Model.NextFlight.FlightNumber</p>

                <p>
                    <strong>From:</strong>
                    @if (Model.NextFlight.OriginAirport?.Country?.FlagImageUrl != null)
                    {
                        <img src="@Model.NextFlight.OriginAirport.Country.FlagImageUrl"
                             alt="@Model.NextFlight.OriginAirport.Country.CountryCode"
                             width="25" class="me-2 align-middle" />
                    }
                    @Model.NextFlight.OriginAirport?.FullName
                    (@Model.NextFlight.OriginAirport?.Country?.Name)
                </p>

                <p>
                    <strong>To:</strong>
                    @if (Model.NextFlight.DestinationAirport?.Country?.FlagImageUrl != null)
                    {
                        <img src="@Model.NextFlight.DestinationAirport.Country.FlagImageUrl"
                             alt="@Model.NextFlight.DestinationAirport.Country.CountryCode"
                             width="25" class="me-2 align-middle" />
                    }
                    @Model.NextFlight.DestinationAirport?.FullName
                    (@Model.NextFlight.DestinationAirport?.Country?.Name)
                </p>

                <p><strong>Departure:</strong> @Model.NextFlight.DepartureUtc.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</p>

                <p><strong>Status:</strong>
                    @switch (Model.NextFlight.Status)
                    {
                        case FlightStatus.Scheduled:
                            <span class="badge bg-warning text-dark">Scheduled</span>
                            break;
                        case FlightStatus.Departed:
                            <span class="badge bg-primary">Departed</span>
                            break;
                        case FlightStatus.Completed:
                            <span class="badge bg-success">Completed</span>
                            break;
                        case FlightStatus.Canceled:
                            <span class="badge bg-danger">Canceled</span>
                            break;
                    }
                </p>
            }
            else
            {
                <p class="text-light">No upcoming flights scheduled.</p>
            }
            </div>
        </div>
    </div>
</div>

</div>


@section Modals {
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark text-white border-0 rounded">
                <div class="modal-header" style="background-color: #4B0012;">
                    <h5 class="modal-title text-white" id="deleteModalLabel">Confirm Deactivation</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to deactivate <strong id="customerName"></strong> account?
                </div>
                <div class="modal-footer border-0">
                    <form id="deleteForm" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" id="customerId" />
                        <button type="button" class="btn btn-gold btn-sm" data-bs-dismiss="modal"><i class="fas fa-times me-1"></i>Cancel</button>
                        <button type="submit" class="btn btn-brand-primary"><i class="fas fa-trash-alt"></i>Deactivate</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>

         document.addEventListener('DOMContentLoaded', () => {
            const deleteModal = document.getElementById('deleteModal');

            if (!deleteModal) return;

            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                if (!button) return;

                const id = button.getAttribute('data-id');
                const model = button.getAttribute('data-model');

                document.getElementById('customerName').textContent = model;
                document.getElementById('customerId').value = id;
                document.getElementById('deleteForm').action = `/Customers/Delete/${id}`;
            });
        });

    </script>
}

