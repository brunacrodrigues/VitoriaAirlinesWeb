@model IEnumerable<VitoriaAirlinesWeb.Data.Entities.Flight>
@using VitoriaAirlinesWeb.Helpers
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var role = ViewData["Role"] as string;
}

<div class="main-content">
    <h2>Dashboard</h2>
    <p>Welcome, @User.Identity.Name! Use the sidebar to navigate through your functionalities.</p>
</div>

@if (role == UserRoles.Admin || role == UserRoles.Employee)
{
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card-body">
                <h5 class="mb-3 text-white">Scheduled Flights (Live)</h5>

                <div class="table-responsive">
                    <table class="table table-custom table-sm align-middle" id="flightTable">
                        <thead>
                            <tr>
                                <th>Flight</th>
                                <th>From</th>
                                <th>To</th>
                                <th>Departure</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="5" class="text-center text-muted">No scheduled flights.</td>
                                </tr>
                            }

                            @foreach (var flight in Model)
                            {
                                <tr data-flight-id="@flight.Id">
                                    <td>@flight.FlightNumber</td>
                                    <td>
                                        <img src="@flight.OriginAirport.Country?.FlagImageUrl"
                                             alt="@flight.OriginAirport.Country?.CountryCode"
                                             width="30"
                                             class="me-2" />
                                        @flight.OriginAirport.FullName
                                    </td>

                                    <td>
                                        <img src="@flight.DestinationAirport.Country?.FlagImageUrl"
                                             alt="@flight.DestinationAirport.Country?.CountryCode"
                                             width="30"
                                             class="me-2" />
                                        @flight.DestinationAirport.FullName
                                    </td>
                                    <td>@flight.DepartureUtc.ToLocalTime().ToString("HH:mm dd MMM")</td>
                                    <td class="status-cell">
                                        <span class="badge bg-warning">
                                            <i class="fas fa-clock me-1"></i> Scheduled
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

        </div>

        <div class="col-md-6">
            <div class="card-body">
                <h5>Live Operations</h5>
                <p>This area can show stats, alerts or summaries.</p>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        async function setupFlightListeners() {
            try {
                if (!window.flightConnection) {
                    console.warn("❗ SignalR not initialized yet.");
                    return;
                }

                await window.flightConnection.start();

                const connection = window.flightConnection;

                connection.on("FlightStatusChanged", function (flightId, newStatus) {
                    const row = document.querySelector(`[data-flight-id="${flightId}"]`);
                    const statusCell = row?.querySelector(".status-cell");

                    if (!row || !statusCell) return;

                    if (newStatus === "Departed") {
                        statusCell.innerHTML = `<span class="badge bg-primary">
                            <i class="fas fa-plane-departure me-1"></i> Departed
                        </span>`;
                    } else if (newStatus === "Completed") {
                        statusCell.innerHTML = `<span class="badge bg-success">
                            <i class="fas fa-plane-arrival me-1"></i> Completed
                        </span>`;
                    } else if (newStatus === "Canceled") {
                        statusCell.innerHTML = `<span class="badge bg-danger">
                            <i class="fas fa-times-circle me-1"></i> Canceled
                        </span>`;
                    }

                    if (newStatus !== "Scheduled") {
                        row.classList.add("fade-out");
                        setTimeout(() => row.remove(), 1000);
                    }
                });

                connection.on("NewFlightScheduled", function (flight) {
                    const tbody = document.querySelector("#flightTable tbody");

                    const newRow = document.createElement("tr");
                    newRow.setAttribute("data-flight-id", flight.id);
                    newRow.innerHTML = `
                        <td>${flight.flightNumber}</td>
                        <td>
                            <img src="${flight.originCountryFlagUrl}" alt="flag" width="30" class="me-2" />
                            ${flight.originAirportFullName}
                        </td>
                        <td>
                            <img src="${flight.destinationCountryFlagUrl}" alt="flag" width="30" class="me-2" />
                            ${flight.destinationAirportFullName}
                        </td>
                        <td>${flight.departureFormatted}</td>
                        <td class="status-cell">
                            <span class="badge bg-warning">
                                <i class="fas fa-clock me-1"></i> Scheduled
                            </span>
                        </td>`;

                    const departureDate = new Date(flight.departureFormatted);
                    const rows = Array.from(tbody.querySelectorAll("tr"));
                    let inserted = false;

                    for (let i = 0; i < rows.length; i++) {
                        if (rows[i].children.length < 4) continue;

                        const rowDateText = rows[i].children[3].textContent;
                        const rowDate = new Date(rowDateText);
                        if (departureDate < rowDate) {
                            tbody.insertBefore(newRow, rows[i]);
                            inserted = true;
                            break;
                        }
                    }

                    if (!inserted) {
                        tbody.appendChild(newRow);
                    }

                    const emptyRow = tbody.querySelector("td[colspan='5']");
                    if (emptyRow) emptyRow.parentElement.remove();
                });

                connection.on("UpdatedFlight", function (flight) {
                    const tbody = document.querySelector("#flightTable tbody");

                    const existingRow = tbody.querySelector(`[data-flight-id="${flight.id}"]`);
                    if (existingRow) existingRow.remove();

                    const newRow = document.createElement("tr");
                    newRow.setAttribute("data-flight-id", flight.id);
                    newRow.innerHTML = `
                        <td>${flight.flightNumber}</td>
                        <td>
                            <img src="${flight.originCountryFlagUrl}" alt="flag" width="30" class="me-2" />
                            ${flight.originAirportFullName}
                        </td>
                        <td>
                            <img src="${flight.destinationCountryFlagUrl}" alt="flag" width="30" class="me-2" />
                            ${flight.destinationAirportFullName}
                        </td>
                        <td>${flight.departureFormatted}</td>
                        <td class="status-cell">
                            <span class="badge bg-warning">
                                <i class="fas fa-clock me-1"></i> Scheduled
                            </span>
                        </td>`;

                    const departureDate = new Date(flight.departureFormatted);
                    const rows = Array.from(tbody.querySelectorAll("tr"));
                    let inserted = false;

                    for (let i = 0; i < rows.length; i++) {
                        if (rows[i].children.length < 4) continue;

                        const rowDateText = rows[i].children[3].textContent;
                        const rowDate = new Date(rowDateText);
                        if (departureDate < rowDate) {
                            tbody.insertBefore(newRow, rows[i]);
                            inserted = true;
                            break;
                        }
                    }

                    if (!inserted) {
                        tbody.appendChild(newRow);
                    }

                    const emptyRow = tbody.querySelector("td[colspan='5']");
                    if (emptyRow) emptyRow.parentElement.remove();

                    newRow.classList.add("highlighted");
                    setTimeout(() => newRow.classList.remove("highlighted"), 1000);
                });

                console.log("✅ Flight dashboard listeners active.");
            } catch (err) {
                console.error("⚠️ Error setting up SignalR listeners:", err);
            }
        }

        setupFlightListeners();
    </script>
}
