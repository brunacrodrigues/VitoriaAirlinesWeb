@model VitoriaAirlinesWeb.Data.Entities.Flight
@using System.Globalization
@using VitoriaAirlinesWeb.Data.Enums

@{
    ViewData["Title"] = "Flight Details";
    var departure = TimeZoneInfo.ConvertTimeFromUtc(Model.DepartureUtc, TimeZoneInfo.FindSystemTimeZoneById("Europe/Lisbon"));
    var arrival = TimeZoneInfo.ConvertTimeFromUtc(Model.ArrivalUtc, TimeZoneInfo.FindSystemTimeZoneById("Europe/Lisbon"));
    var format = "dd/MM/yyyy HH:mm";

    var rows = Model.Airplane.Seats.Select(s => s.Row).Distinct().OrderBy(r => r);
    var letters = Model.Airplane.Seats.Select(s => s.Letter).Distinct().OrderByDescending(c => c).ToList();
}

<div class="container-fluid py-4" style="background-color: #0e0e0e;">
    <h2 class="dark-title mb-3">@Model.FlightNumber</h2>

    <div class="row g-4">
     
        <div class="col-12">
            <div class="card flight-card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-plane me-2"></i> Flight Information
                    </div>

                    @if (Model.Status == FlightStatus.Scheduled)
                    {
                        <div class="d-flex gap-2">
                            <a asp-action="Edit"
                               asp-route-id="@Model.Id"
                               class="btn btn-sm btn-gold">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>

                            <button class="btn btn-sm btn-brand-primary" style="background-color:darkred" title="Cancel"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal"
                                    data-id="@Model.Id"
                                    data-model="@Model.FlightNumber">
                                <i class="fas fa-times me-1"></i>Cancel
                            </button>
                        </div>
                    }
                </div>

                <div class="card-body">
                    <div class="row text-center align-items-center">
            
                        <div class="col-md-5 text-start">
                            <p><strong>Flight Number:</strong> @Model.FlightNumber</p>
                            <p><strong>Airplane:</strong> @Model.Airplane.Model</p>
                            <p><strong>Exec. Price:</strong> @Model.ExecutiveClassPrice.ToString("C", CultureInfo.CreateSpecificCulture("pt-PT"))</p>
                            <p><strong>Eco. Price:</strong> @Model.EconomyClassPrice.ToString("C", CultureInfo.CreateSpecificCulture("pt-PT"))</p>
                            <p><strong>Duration:</strong> @Model.Duration</p>
                        </div>

             
                        <div class="col-md-2 d-none d-md-block">
                            @if (!string.IsNullOrEmpty(Model.Airplane.ImageFullPath))
                            {
                                <img src="@Model.Airplane.ImageFullPath"
                                     alt="Airplane"
                                     class="img-fluid rounded shadow-sm"
                                     style="max-height: 150px;" />
                            }
                        </div>

                   
                        <div class="col-md-5 text-start">
                            <p>
                                <strong>From:</strong>
                                <img src="@Model.OriginAirport.Country?.FlagImageUrl" width="25" class="me-2" />
                                @Model.OriginAirport.FullName
                            </p>
                            <p>
                                <strong>To:</strong>
                                <img src="@Model.DestinationAirport.Country?.FlagImageUrl" width="25" class="me-2" />
                                @Model.DestinationAirport.FullName
                            </p>
                            <p><strong>Departure:</strong> @departure.ToString(format)</p>
                            <p><strong>Arrival:</strong> @arrival.ToString(format)</p>
                            <p>
                                <strong>Status:</strong>
                                @switch (Model.Status)
                                {
                                    case FlightStatus.Scheduled:
                                        <span class="badge bg-warning text-dark">Scheduled</span>
                                        break;
                                    case FlightStatus.Departed:
                                        <span class="badge bg-primary">Departed</span>
                                        break;
                                    case FlightStatus.Completed:
                                        <span class="badge bg-success">Completed</span>
                                        break;
                                    case FlightStatus.Canceled:
                                        <span class="badge bg-danger">Canceled</span>
                                        break;
                                }
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       
        <div class="col-12">
            <div class="card flight-card">
                <div class="card-header">
                    <i class="fas fa-th me-2"></i> @Model.Airplane.Model Seat Map
                </div>
                <div class="card-body d-flex flex-column align-items-center">
                    <div class="seat-map-scroll-wrapper mb-3" style="overflow-x: auto; width: 100%;">
                        <div style="min-width: 100%; display: inline-block;">
                            <div class="d-flex flex-column gap-2 align-items-center px-3" style="min-width: 420px;">
                                @foreach (var letter in letters)
                                {
                                    <div class="d-flex gap-2 align-items-center">
                                        @foreach (var row in rows)
                                        {
                                            var seat = Model.Airplane.Seats.FirstOrDefault(s => s.Row == row && s.Letter == letter);
                                            if (seat != null)
                                            {
                                                <div class="booking-seat @(seat.Class == SeatClass.Executive ? "executive" : "economy")">
                                                    @seat.Row@seat.Letter
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="booking-seat" style="opacity: 0; pointer-events: none;">--</div>
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="legend-container">
                        <div class="legend-item">
                            <div class="seat-sample executive"></div>
                            Executive
                        </div>
                        <div class="legend-item">
                            <div class="seat-sample economy"></div>
                            Economy
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <a asp-action="Index" class="btn btn-brand-primary">
            <i class="fas fa-arrow-left me-1"></i> Back to List
        </a>
    </div>


</div>

@section Modals {
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark text-white border-0 rounded">
                <div class="modal-header" style="background-color: #4B0012;">
                    <h5 class="modal-title text-white" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to cancel the flight <strong id="flightNumber"></strong>?
                </div>
                <div class="modal-footer border-0">
                    <form id="deleteForm" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" id="flightId" />
                        <button type="button" class="btn btn-gold btn-sm" data-bs-dismiss="modal"><i class="fas fa-times me-1"></i>No</button>
                        <button type="submit" class="btn btn-brand-primary"><i class="fas fa-trash-alt"></i>Yes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        
              document.addEventListener('DOMContentLoaded', () => {
            const deleteModal = document.getElementById('deleteModal');

            if (!deleteModal) return;

            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                if (!button) return;

                const id = button.getAttribute('data-id');
                const model = button.getAttribute('data-model');

                document.getElementById('flightNumber').textContent = model;
                document.getElementById('flightId').value = id;
                document.getElementById('deleteForm').action = `/Flights/Cancel/${id}`;

            });
        });


    </script>
}