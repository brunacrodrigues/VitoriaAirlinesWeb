@using Syncfusion.EJ2.InteractiveChat

@{
    ViewData["Title"] = "AI Assistant";
    var suggestions = ViewBag.Suggestions as string[] ?? Array.Empty<string>();
}
<div class="aiassist-container" style="
    position: fixed;
    top: 100px;       /* altura navbar */
    bottom: 30px;    /* altura footer */
    left: 50px;
    right: 50px;
    margin: 0 auto;
    border: 1px solid #ccc;
    border-radius: 8px;
    overflow: auto;  /* para scroll interno se necessário */
">    <ejs-aiassistview id="aiAssistView"
                      promptSuggestions="@suggestions"
                      promptRequest="onPromptRequest"
                      created="onCreated">
    </ejs-aiassistview>
</div>

<script>
    var assistObj;
    var messageHistory = [];

    function onCreated() {
        assistObj = this;
    }

    
    window.onPromptRequest = async function (args) {
        if (args.event) {
            args.event.preventDefault();
        }

        const userPrompt = args.prompt;

        const payload = {
            prompt: userPrompt,
            history: messageHistory
        };

        messageHistory.push({ role: "user", content: userPrompt });

        try {
            const response = await fetch('/AssistBot/Ask', {
                method: 'POST',
                credentials: 'same-origin',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

           
            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`Network error: ${response.status}. ${errorText}`);
            }

           
            const data = await response.json();

            
            if (!data.isSuccess) {
                throw new Error(data.message);
            }
                const formattedResult = data.results.replace(/\n/g, "<br>");

            messageHistory.push({ role: "assistant", content: data.results });
            assistObj.addPromptResponse(formattedResult);

           

        } catch (error) {
            assistObj.addPromptResponse("An error occured.");
            messageHistory.pop();
        }
    };
</script>