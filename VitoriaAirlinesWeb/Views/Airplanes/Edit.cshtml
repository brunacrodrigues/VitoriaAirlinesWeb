@model VitoriaAirlinesWeb.Models.ViewModels.Airplanes.AirplaneViewModel
@using VitoriaAirlinesWeb.Data.Enums

@{
    ViewData["Title"] = "Edit Airplane";
    var returnUrl = Context.Request.Query["returnUrl"].ToString();
    var safeReturnUrl = string.IsNullOrEmpty(returnUrl) ? Url.Action("Index", "Airplanes") : returnUrl;
}

<div class="container-fluid py-4" style="background-color: #0e0e0e;">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="dark-title m-0">
            <i class="fas fa-edit me-2"></i>@Model.Model
        </h2>
        <a href="@safeReturnUrl" class="btn btn-brand-primary">
            <i class="fas fa-arrow-left me-1"></i> Back to List
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success text-center">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger text-center">@TempData["ErrorMessage"]</div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info text-center">@TempData["InfoMessage"]</div>
    }

    @if (ViewBag.LockCapacity == true)
    {
        <div class="alert alert-warning text-center">
            Some fields are read-only because this airplane has flights associated.
        </div>
    }

    <form asp-action="Edit" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ImageId" />
        <input type="hidden" name="returnUrl" value="@safeReturnUrl" />
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3 text-center"></div>

        <div class="row g-4">
            <div class="col-md-6">
                <div class="card flight-card h-100">
                    <div class="card-header">
                        <i class="fas fa-image me-2"></i> Current Image
                    </div>
                    <div class="card-body text-center">
                        <img id="imagePreview"
                             src="https://brunablob.blob.core.windows.net/images/@Model.ImageId"
                             alt="Airplane Image"
                             class="rounded mb-3"
                             style="width: 100%; max-width: 240px; max-height: 200px; object-fit: contain; border: 3px solid #444;" />

                        <input asp-for="ImageFile" type="file" accept=".jpg,.jpeg,.png"
                               class="form-control custom-input" />
                        <span asp-validation-for="ImageFile" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card flight-card h-100">
                    <div class="card-header">
                        <i class="fas fa-info-circle me-2"></i> Airplane Information
                    </div>
                    <div class="card-body">
                        <p class="text-white-50 mb-4 text-center">
                            Update the airplane details. If the airplane has flights, seat numbers cannot be changed.
                        </p>

                        <div class="mb-3">
                            <label asp-for="Model" class="form-label custom-label">Model</label>
                            <input asp-for="Model" class="form-control custom-input" placeholder="e.g. Airbus A320" />
                            <span asp-validation-for="Model" class="text-danger"></span>
                        </div>

                        <div class="mb-3 w-50">
                            <label asp-for="TotalExecutiveSeats" class="form-label custom-label">Executive Seats</label>
                            <input asp-for="TotalExecutiveSeats" type="number" min="0"
                                   class="form-control custom-input"
                                   readonly="@(ViewBag.LockCapacity == true ? "readonly" : null)"
                                   placeholder="e.g. 12" />
                            <span asp-validation-for="TotalExecutiveSeats" class="text-danger"></span>
                        </div>

                        <div class="mb-3 w-50">
                            <label asp-for="TotalEconomySeats" class="form-label custom-label">Economy Seats</label>
                            <input asp-for="TotalEconomySeats" type="number" min="1"
                                   class="form-control custom-input"
                                   readonly="@(ViewBag.LockCapacity == true ? "readonly" : null)"
                                   placeholder="e.g. 120" />
                            <span asp-validation-for="TotalEconomySeats" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label custom-label">Status</label>
                            <div class="d-flex gap-3 flex-wrap">
                                @foreach (var status in Enum.GetValues(typeof(AirplaneStatus)))
                                {
                                    var statusValue = (int)status;
                                    var isSelected = Model.Status == (AirplaneStatus)status;

                                    var colorClass = status switch
                                    {
                                        AirplaneStatus.Active => "status-active",
                                        AirplaneStatus.Maintenance => "status-maintenance",
                                        AirplaneStatus.Inactive => "status-inactive",
                                        _ => ""
                                    };

                                    <label class="btn selectable-card @colorClass @(isSelected ? "selected" : "")">
                                        <input type="radio"
                                               name="Status"
                                               value="@statusValue"
                                               class="d-none"
                                               @(isSelected ? "checked" : "") />
                                        <span>@status</span>
                                    </label>
                                }
                            </div>
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>

                        <p class="text-muted small mt-2">
                            <i class="fas fa-info-circle me-1"></i>
                            Executive and economy seats define how many places will be generated automatically.
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <div class="text-center mt-5">
            <button type="submit" class="btn btn-gold w-50 py-3 fs-5 rounded-pill shadow">
                <i class="fas fa-save me-2"></i>Save Changes
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // preview da imagem
            const imageInput = document.getElementById("ImageFile");
            const imagePreview = document.getElementById("imagePreview");

            if (imageInput && imagePreview) {
                imageInput.addEventListener("change", function () {
                    const file = this.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            imagePreview.src = e.target.result;
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }

            // tornar status selecionável dinamicamente
            const cards = document.querySelectorAll(".selectable-card");
            cards.forEach(card => {
                const input = card.querySelector("input[type=radio]");
                input.addEventListener("change", () => {
                    cards.forEach(c => c.classList.remove("selected"));
                    card.classList.add("selected");
                });
            });

            // ocultar alertas após 8s
            setTimeout(function () {
                document.querySelectorAll('.alert').forEach(alert => {
                    alert.style.transition = "opacity 0.5s ease-out";
                    alert.style.opacity = '0';
                    setTimeout(() => alert.remove(), 500);
                });
            }, 8000);
        });
    </script>
}
